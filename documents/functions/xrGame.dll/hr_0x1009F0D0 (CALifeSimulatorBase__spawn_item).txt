int __thiscall CALifeSimulatorBase__spawn_item(void *this, int a2, int a3, int a4, __int16 a5, __int16 a6, char a7)
{
  int v7; // eax@1
  void *v8; // ebp@1
  int v9; // esi@1
  int v10; // eax@4
  int v11; // ecx@6
  void *v12; // edi@9
  int v13; // eax@12
  int v14; // eax@12
  const char *v15; // eax@13
  int v16; // eax@21
  int v17; // esi@21
  char *v18; // eax@21
  int v19; // eax@22
  int v20; // ST2C_4@23
  char DstBuf; // [sp+38h] [bp-110h]@21
  char Dst; // [sp+48h] [bp-100h]@15

  v8 = this;
  v7 = ClassidByName(a2);
  v9 = v7;
  if ( !byte_10643AAB )
  {
    if ( !v7 )
      xrDebug__fail(Debug, "abstract", "Cannot find item with section", a2);
  }
  v10 = str_container__dock(g_pStringContainer, a2);
  if ( v10 )
    ++*(_DWORD *)v10;
  v11 = *(_DWORD *)(v9 + 60);
  if ( v11 )
  {
    --*(_DWORD *)v11;
    if ( !**(_DWORD **)(v9 + 60) )
      *(_DWORD *)(v9 + 60) = 0;
  }
  *(_DWORD *)(v9 + 60) = v10;
  *(_BYTE *)(v9 + 66) = -1;
  v12 = (void *)(*((_DWORD *)v8 + 1) + 558340);
  if ( !byte_10643AA8 )
  {
    if ( !*(_DWORD *)v12 )
      xrDebug__fail(
        Debug,
        "m_available_count",
        "Not enough IDs",
        "d:\\prog_repository\\sources\\trunk\\xrgame\\id_generator.h",
        92,
        "CID_Generator<unsigned int,unsigned char,unsigned short,unsigned char,unsigned short,0,65534,256,65535,0>::tfGetID",
        &byte_10643AA8);
  }
  v14 = sub_1009DEC0((int)((char *)v12 + 4), (int)((char *)v12 + 67588));
  *(_WORD *)(v9 + 50) = sub_1009E190(v12, v14, -1);
  *(_WORD *)(v9 + 52) = a6;
  *(_WORD *)(v9 + 54) = -1;
  *(_DWORD *)(v9 + 84) = *(_DWORD *)a3;
  *(_DWORD *)(v9 + 88) = *(_DWORD *)(a3 + 4);
  *(_DWORD *)(v9 + 92) = *(_DWORD *)(a3 + 8);
  *(_WORD *)(v9 + 44) = 128;
  v13 = *(_DWORD *)(v9 + 60);
  if ( v13 )
    v15 = (const char *)(v13 + 16);
  else
    v15 = 0;
  strncpy_s(&Dst, 0x100u, v15, 0x100u);
// перевод ида на смещении 50 в десятичную систему
  if ( *(_WORD *)(v9 + 50) < 0x3E8u )
    sub_1005A2D0(&Dst, 256, "0");
  if ( *(_WORD *)(v9 + 50) < 0x64u )
    sub_1005A2D0(&Dst, 256, "0");
  if ( *(_WORD *)(v9 + 50) < 0xAu )
    sub_1005A2D0(&Dst, 256, "0");
  v18 = itoa(*(_WORD *)(v9 + 50), &DstBuf, 10);
// в v18 ид в десятичной
  sub_1005A2D0(&Dst, 256, v18);
  (*(void (__stdcall **)(int, char *))(*(_DWORD *)v9 + 20))(v9, &Dst); // 25DE60
  v16 = sub_10346210(v9); // тупо возвращает v9
  v17 = v16;
  if ( v16 )
  {
    v19 = sub_10346230(v16);
    if ( v19 )
      *(_WORD *)(v19 + 422) = sub_103DD690((void *)v19, v20);
  }
  *(_DWORD *)(v17 + 168) = a4;
  *(_WORD *)(v17 + 156) = a5;
  *(_WORD *)(v17 + 134) = -1;
  if ( a7 )
    sub_100A44A0(v8, v17, 1);
// короче вызов калбеков в луа...
  (*(void (__thiscall **)(int))(*(_DWORD *)v17 + 180))(v17); // в ней функция вызывает BAD30
  (*(void (__thiscall **)(int))(*(_DWORD *)v17 + 196))(v17); // вызывает 
  return v17;
}

